{"remainingRequest":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/src/views/event/RegisterEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/src/views/event/RegisterEvent.vue","mtime":1558897878551},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport event from '@/services/event.js' \nimport user from '@/services/user.js' \nimport { store } from '@/store'\n\nexport default {\n  name: 'registerEvent',\n  data() {\n    return {\n      name: undefined,\n      location: undefined,\n      coverage_area: undefined,\n      dateStart: undefined,\n      dateEnd: undefined,\n      description: undefined,\n      coordinator: undefined,\n    }\n  },\n  methods: {\n    register () {\n      user.information(this.$store.getters.email,this.$store.getters.token).then(response => {\n        this.coordinator = response.data.id\n        if(response.status == 200 && typeof(this.coordinator) == 'number'){\n          event.add(this.name, this.location, this.coverage_area, this.dateStart,this.dateEnd,this.description,this.coordinator,this.$store.getters.email,this.$store.getters.token)\n          .then(response => {\n            this.$swal('OK!!!','evento registrado com sucesso' + response, 'success')\n          })\n          .catch(error => {\n            alert(error)\n          })\n        }\n      })\n      \n    }\n  } \n}\n",{"version":3,"sources":["RegisterEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"RegisterEvent.vue","sourceRoot":"src/views/event","sourcesContent":["<template>\n  <div class=\"row valign-wrapper\">\n    <div class=\"col s10 offset-s3 valign\">\n      <div class=\"card container\">\n        <div class=\"card-content teal-text\">\n          <div class=\"input-field col s12\">\n            <input  id=\"event_name\" type=\"text\" class=\"validate\" v-model=\"name\">\n            <label for=\"event_name\">Nome do evento</label>\n          </div>\n          <div class=\"input-field col s12\">\n            <input id=\"location\" type=\"text\" class=\"validate\" v-model=\"location\">\n            <label for=\"location\">Local do evento</label>\n          </div>\n          <div class=\"input-field col s12\">\n            <input id=\"coverage_area\" type=\"text\" class=\"validate\" v-model=\"coverage_area\">\n            <label for=\"coverage_area\">areas do evento</label>\n          </div>\n          <div class=\"row\">\n            <div class=\"input-field col s6\">\n              <input id=\"date_start\" type=\"text\" class=\"validate\" v-model=\"dateStart\">\n              <label for=\"date_start\">dia de inicio</label>\n            </div>\n            <div class=\"input-field col s6\">\n              <input id=\"date_end\" type=\"text\" class=\"validate\" v-model=\"dateEnd\">\n              <label for=\"date_end\">fim do evento</label>\n            </div>\n          </div>\n          <div class=\"input-field col s12\">\n            <textarea id=\"description\" class=\"materialize-textarea\" v-model=\"description\"></textarea>\n            <label for=\"description\">Descricao do evento</label>\n          </div>\n          <a class=\"padding-button waves-effect waves-light btn\" v-on:click=\"register()\">Registrar</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport event from '@/services/event.js' \nimport user from '@/services/user.js' \nimport { store } from '@/store'\n\nexport default {\n  name: 'registerEvent',\n  data() {\n    return {\n      name: undefined,\n      location: undefined,\n      coverage_area: undefined,\n      dateStart: undefined,\n      dateEnd: undefined,\n      description: undefined,\n      coordinator: undefined,\n    }\n  },\n  methods: {\n    register () {\n      user.information(this.$store.getters.email,this.$store.getters.token).then(response => {\n        this.coordinator = response.data.id\n        if(response.status == 200 && typeof(this.coordinator) == 'number'){\n          event.add(this.name, this.location, this.coverage_area, this.dateStart,this.dateEnd,this.description,this.coordinator,this.$store.getters.email,this.$store.getters.token)\n          .then(response => {\n            this.$swal('OK!!!','evento registrado com sucesso' + response, 'success')\n          })\n          .catch(error => {\n            alert(error)\n          })\n        }\n      })\n      \n    }\n  } \n}\n</script>\n"]}]}