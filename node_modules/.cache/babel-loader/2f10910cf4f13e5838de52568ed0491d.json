{"remainingRequest":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/babel-loader/lib/index.js!/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/eslint-loader/index.js??ref--13-0!/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/src/services/user.js","dependencies":[{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/src/services/user.js","mtime":1559858762297},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { http } from \"./apiUser\";\nimport { http2 } from \"./apiUser\";\nimport { http3 } from \"./apiUser\";\nexport default {\n  login: function login(email, password) {\n    return http.post('user/login', {\n      email: email,\n      password: password\n    });\n  },\n  register: function register(name, email, password, cpf, institution, phone, bornDate, sex) {\n    return http.post('user', {\n      name: name,\n      cpf: cpf,\n      email: email,\n      password: password,\n      phone: phone,\n      born_date: bornDate,\n      sex: sex,\n      institution: institution\n    });\n  },\n  information: function information(email, token) {\n    return http.post('userinfo', {\n      email: email,\n      token: token\n    });\n  },\n  verifyCpf: function verifyCpf(cpf) {\n    return http2.get('', {\n      params: {\n        cpf: cpf\n      }\n    });\n  },\n  PermissionSet: function PermissionSet(email, level) {\n    return http3.post('permission_Add', {\n      email: email,\n      level: level\n    });\n  }\n};",{"version":3,"sources":["/home/newtonius/Megasync/Modelos/Python/web/Flask/frontend-vuejs/src/services/user.js"],"names":["http","http2","http3","login","email","password","post","register","name","cpf","institution","phone","bornDate","sex","born_date","information","token","verifyCpf","get","params","PermissionSet","level"],"mappings":"AAAA,SAASA,IAAT;AACA,SAASC,KAAT;AACA,SAASC,KAAT;AAEA,eAAc;AACVC,EAAAA,KADU,iBACHC,KADG,EACIC,QADJ,EACa;AACnB,WAAOL,IAAI,CAACM,IAAL,CAAU,YAAV,EAAuB;AAC1BF,MAAAA,KAAK,EAAEA,KADmB;AAE1BC,MAAAA,QAAQ,EAAEA;AAFgB,KAAvB,CAAP;AAIH,GANS;AAOVE,EAAAA,QAPU,oBAODC,IAPC,EAOKJ,KAPL,EAOYC,QAPZ,EAOsBI,GAPtB,EAO2BC,WAP3B,EAOwCC,KAPxC,EAO+CC,QAP/C,EAOyDC,GAPzD,EAO6D;AACnE,WAAOb,IAAI,CAACM,IAAL,CAAU,MAAV,EAAiB;AACpBE,MAAAA,IAAI,EAAEA,IADc;AAEpBC,MAAAA,GAAG,EAAEA,GAFe;AAGpBL,MAAAA,KAAK,EAAEA,KAHa;AAIpBC,MAAAA,QAAQ,EAAEA,QAJU;AAKpBM,MAAAA,KAAK,EAAEA,KALa;AAMpBG,MAAAA,SAAS,EAAEF,QANS;AAOpBC,MAAAA,GAAG,EAAEA,GAPe;AAQpBH,MAAAA,WAAW,EAAEA;AARO,KAAjB,CAAP;AAUH,GAlBS;AAmBVK,EAAAA,WAnBU,uBAmBEX,KAnBF,EAmBSY,KAnBT,EAmBe;AACrB,WAAOhB,IAAI,CAACM,IAAL,CAAU,UAAV,EAAqB;AACxBF,MAAAA,KAAK,EAAEA,KADiB;AAExBY,MAAAA,KAAK,EAAEA;AAFiB,KAArB,CAAP;AAIH,GAxBS;AAyBVC,EAAAA,SAzBU,qBAyBAR,GAzBA,EAyBI;AACV,WAAOR,KAAK,CAACiB,GAAN,CAAU,EAAV,EAAa;AAChBC,MAAAA,MAAM,EAAC;AACHV,QAAAA,GAAG,EAAEA;AADF;AADS,KAAb,CAAP;AAKH,GA/BS;AAgCVW,EAAAA,aAhCU,yBAgCIhB,KAhCJ,EAgCUiB,KAhCV,EAgCgB;AACtB,WAAOnB,KAAK,CAACI,IAAN,CAAW,gBAAX,EAA4B;AAC/BF,MAAAA,KAAK,EAAEA,KADwB;AAE/BiB,MAAAA,KAAK,EAAEA;AAFwB,KAA5B,CAAP;AAIH;AArCS,CAAd","sourcesContent":["import { http } from './apiUser'\nimport { http2 } from './apiUser'\nimport { http3 } from './apiUser'\n\nexport default{\n    login( email, password){\n        return http.post('user/login',{\n            email: email,\n            password: password\n        })\n    },\n    register(name, email, password, cpf, institution, phone, bornDate, sex){\n        return http.post('user',{\n            name: name,\n            cpf: cpf,\n            email: email,\n            password: password,\n            phone: phone,\n            born_date: bornDate,\n            sex: sex,\n            institution: institution\n        })\n    },\n    information(email, token){\n        return http.post('userinfo',{\n            email: email,\n            token: token\n        })\n    },\n    verifyCpf(cpf){\n        return http2.get('',{\n            params:{\n                cpf: cpf \n            }\n        })\n    },\n    PermissionSet(email,level){\n        return http3.post('permission_Add',{\n            email: email,\n            level: level\n        })\n    }\n}\n"]}]}